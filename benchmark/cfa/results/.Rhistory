pacman::p_load(tidyverse, magrittr)
p <- c(0.01, 0.05, 0.1, 0.2)
n <- c(10, 20, 40, 100, 500)
data <- crossing(p, n)
data %<>% mutate(dist = pmap(data, ~tibble(dens = dbinom(0:..2, ..2, ..1), k = 0:..2)))
data
data %>% View()
View(.[[3]][[1]])
data %>% unnest()
data %<>% unnest(cols = c(dist))
data %>% ggplot(aes(x = k, y = dens, color = n)) +
geom_line() +
facet_wrap(~n)
data %>% ggplot(aes(x = k, y = dens, color = fct(n))) +
geom_line() +
facet_wrap(~n)
data %>% ggplot(aes(x = k, y = dens, color = factor(n))) +
geom_line() +
facet_wrap(~n)
data %>% ggplot(aes(x = k, y = dens, color = factor(n))) +
geom_line() +
facet_wrap(~p)
data %>% ggplot(aes(x = k, y = dens, color = factor(n))) +
geom_line() +
facet_wrap(~p) +
theme_minimal()
pacman::p_load(tidyverse, magrittr)
p <- c(0.01, 0.05, 0.1, 0.2)
n <- c(10, 20, 40, 100, 200)
data <- crossing(p, n)
data %<>% mutate(dist = pmap(data, ~tibble(dens = dbinom(0:..2, ..2, ..1), k = 0:..2)))
data %<>% unnest(cols = c(dist))
data %>% ggplot(aes(x = k, y = dens, color = factor(n))) +
geom_line() +
facet_wrap(~p) +
theme_minimal()
data %>%
filter(p = 0.01) %>%
ggplot(aes(x = k, y = dens, color = factor(n))) +
geom_line() +
facet_wrap(~p) +
theme_minimal()
data %>%
filter(p == 0.01) %>%
ggplot(aes(x = k, y = dens, color = factor(n))) +
geom_line() +
facet_wrap(~p) +
theme_minimal()
data %>% ggplot(aes(x = k, y = dens, color = factor(n))) +
geom_line() +
facet_wrap(~p) +
theme_minimal()
data %>% ggplot(aes(x = k, y = dens, color = factor(n))) +
geom_line() +
facet_wrap(~p) +
theme_minimal() +
xlim(c(0, 50))
data %>% ggplot(aes(x = k, y = dens, color = factor(n))) +
geom_line() +
facet_wrap(~p) +
theme_minimal() +
xlim(c(0, 3))
data %>% ggplot(aes(x = k, y = dens, color = factor(n))) +
geom_line() +
facet_wrap(~p) +
theme_minimal() +
xlim(c(0, 50))
data %>% ggplot(aes(x = k, y = dens, color = factor(n))) +
geom_line() +
facet_wrap(~p) +
theme_minimal() +
xlim(c(0, 3))
data %>% ggplot(aes(x = k, y = dens, color = factor(n))) +
geom_line() +
facet_wrap(~p) +
theme_minimal() +
xlim(c(0, 50)) +
ylim(c(0,1))
data %>% ggplot(aes(x = k, y = dens, color = factor(n))) +
geom_line() +
facet_wrap(~p) +
theme_minimal() +
xlim(c(0, 3)) +
ylim(c(0,1))
data %>% ggplot(aes(x = k, y = dens, color = factor(n))) +
geom_line() +
facet_wrap(~p) +
theme_minimal() +
xlim(c(0, 3)) +
ylim(c(0,1))
data %>% ggplot(aes(x = k, y = dens, color = factor(n))) +
geom_line() +
facet_wrap(~p) +
theme_minimal() +
xlim(c(0, 50)) +
ylim(c(0,1))
choose(200,40)
data %>% ggplot(aes(x = k, y = dens, color = factor(p))) +
geom_line() +
facet_wrap(~n) +
theme_minimal() +
xlim(c(0, 50)) +
ylim(c(0,1))
data %>% ggplot(aes(x = k, y = dens, color = factor(p))) +
geom_line() +
facet_wrap(~n) +
theme_minimal() +
xlim(c(0, 3)) +
ylim(c(0,1))
data %>% View()
data %>%
filter(p < 0.06) %>%
ggplot(aes(x = k, y = dens, color = factor(p))) +
geom_line() +
facet_wrap(~n) +
theme_minimal() +
xlim(c(0, 3)) +
ylim(c(0,1))
data %>% ggplot(aes(x = k, y = dens, color = factor(p))) +
geom_line() +
geom_point() +
facet_wrap(~n) +
theme_minimal() +
xlim(c(0, 3)) +
ylim(c(0,1))
data %>% ggplot(aes(x = k, y = dens, color = factor(n))) +
geom_line() +
geom_point() +
facet_wrap(~p) +
theme_minimal() +
xlim(c(0, 50)) +
ylim(c(0,1))
data %>% ggplot(aes(x = k, y = dens, color = factor(p))) +
geom_line() +
geom_point() +
facet_wrap(~n) +
theme_minimal() +
xlim(c(0, 50)) +
ylim(c(0,1))
data %>% ggplot(aes(x = k, y = dens, color = factor(p))) +
geom_line() +
facet_wrap(~n) +
theme_minimal() +
xlim(c(0, 50)) +
ylim(c(0,1))
data %>% ggplot(aes(x = k, y = dens, color = factor(p))) +
geom_line() +
geom_point() +
facet_wrap(~n) +
theme_minimal() +
xlim(c(0, 3)) +
ylim(c(0,1))
choose(10,3)
nodes <- 1:100
data <- crossing(nodes, nodes)
nodes_1 <- 1:100
nodes_2 <- 1:100
data <- crossing(nodes_1, nodes_1)
data <- crossing(nodes_1, nodes_2)
data
combs = list()
for (i in 1:100){
for (j in 1:i-1){
combs[[length(combs) + 1]] = list(node_1 = i, node_2 = j)
}
}
combs
combs %>% View()
?seq_along
seq(1, 0)
seq_along(0)
for (i in 1:100){
for (j in 1:i-1){
if (j > 0 & i > 0){
combs[[length(combs) + 1]] = list(node_1 = i, node_2 = j)
}
}
}
combs = list()
for (i in 1:100){
for (j in 1:i-1){
if (j > 0 & i > 0){
combs[[length(combs) + 1]] = list(node_1 = i, node_2 = j)
}
}
}
combs %>% View()
data <- map_dfr(combs, ~.x)
data
?rnorm
data %<>% mutate(con = rnorm(n_nodes, 0, 0.2))
n_nodes = 100
combs = list()
for (i in 1:n_nodes){
for (j in 1:i-1){
if (j > 0 & i > 0){
combs[[length(combs) + 1]] = list(node_1 = i, node_2 = j)
}
}
}
data <- map_dfr(combs, ~.x)
data %<>% mutate(con = rnorm(n_nodes, 0, 0.2))
data %<>% mutate(con = rnorm(length(data), 0, 0.2))
data %<>% mutate(con = rnorm(nrow(data), 0, 0.2))
data
data %<>% mutate(con = rnorm(nrow(data), 0, 0.3))
data
pacman::p_load(tidyverse, magrittr)
p <- c(0.01, 0.05, 0.1, 0.2)
n <- c(10, 20, 40, 100, 200)
data <- crossing(p, n)
data %<>% mutate(dist = pmap(data, ~tibble(dens = dbinom(0:..2, ..2, ..1), k = 0:..2)))
data %<>% unnest(cols = c(dist))
data %>% ggplot(aes(x = k, y = dens, color = factor(p))) +
geom_line() +
facet_wrap(~n) +
theme_minimal() +
xlim(c(0, 50)) +
ylim(c(0,1))
choose(200,20)
data %>% ggplot(aes(x = k, y = dens, color = factor(p))) +
geom_line() +
geom_point() +
facet_wrap(~n) +
theme_minimal() +
xlim(c(0, 3)) +
ylim(c(0,1))
n_nodes = 100
combs = list()
for (i in 1:n_nodes){
for (j in 1:i-1){
if (j > 0 & i > 0){
combs[[length(combs) + 1]] = list(node_1 = i, node_2 = j)
}
}
}
data <- map_dfr(combs, ~.x)
data %<>% mutate(con = rnorm(nrow(data), 0, 0.3))
data
?sample
main_path <- sample(1:nrow(data), 1)
data[main_path, ]
myf <- function(price){
price <- price*(31/17)
price <- price/56.58
return(price)
}
myf(7.91)
myf(8.01)
myf(9.82)
myf(1.27)
myf(7.20)
myf(7.88)
myf(2.49)
myf(1.15)
myf(0.79)
myf(4.78)
myf(1.19)
myf(1.19)
myf(4.75)
myf(0.29)
myf(0.73)
myf(7.01)
7.91+8.01+0.01+9.82+1.27+7.2+7.88+2.49+1.15+0.79+4.78+1.19+4.75+0.29+0.73+7.01
5714+1282+55+3634+1500+979+76
6245+5714
pacman::p_load(lavaan)
######### falsely specified control variables
model_collider <- "
y ~ 0.3*x + 0.3*c2
x ~ 0.3*c2
c1 ~ 0.3*x + 0.3*y
c1 ~~ c2
"
model_control <- "
y ~ 0.3*x + 0.3*c2 + 0.3*c1
x ~ 0.3*c2 + 0.3*c1
c1 ~~ c2
"
######### falsely specified control variables
model_collider <- "
y ~ 0.3*x + 0.3*c2
x ~ 0.3*c2
c1 ~ 0.3*x + 0.3*y
c1 ~~ c2
"
model_control <- "
y ~ 0.3*x + 0.3*c2 + 0.3*c1
x ~ 0.3*c2 + 0.3*c1
c1 ~~ c2
"
######### falsely specified control variables
model_collider_1 <- "
y ~ 0.3*x + 0.3*c2
x ~ 0.3*c2
c1 ~ 0.3*x + 0.3*y
c1 ~~ c2
"
model_control <- "
y ~ 0.3*x + 0.3*c2 + 0.3*c1
x ~ 0.3*c2 + 0.3*c1
c1 ~~ c2
"
data_1 <-
lavaan::simulateData(
model_collider,
sample.nobs = 100000,
auto.cov.y = F)
fit_1 <- sem(model_control, data, auto.cov.y = F)
fit_1 <- sem(model_control, data_1, auto.cov.y = F)
fit_1_true <- sem(model_collider_1, data_1, auto.cov.y = F)
summary(fit_1_true)
######### falsely specified control variables
model_collider_1 <- "
y ~ 0.3*x + 0.3*c2
x ~ 0.3*c2
c1 ~ 0.3*x + 0.3*y
c1 ~~ 0.3*c2
"
model_control <- "
y ~ 0.3*x + 0.3*c2 + 0.3*c1
x ~ 0.3*c2 + 0.3*c1
c1 ~~ 0.3*c2
"
data_1 <-
lavaan::simulateData(
model_collider,
sample.nobs = 100000,
auto.cov.y = F)
fit_1_true <- sem(model_collider_1, data_1, auto.cov.y = F)
summary(fit_1_true)
######### falsely specified control variables
model_collider_1 <- "
y ~ 0.3*x + 0.3*c2
x ~ 0.3*c2
c1 ~ 0.3*x + 0.3*y
c1 ~~ 0.3*c2
"
model_control <- "
y ~ 0.3*x + 0.3*c2 + 0.3*c1
x ~ 0.3*c2 + 0.3*c1
c1 ~~ 0.3*c2
"
data_1 <-
lavaan::simulateData(
model_collider_1,
sample.nobs = 100000,
auto.cov.y = F)
fit_1_true <- sem(model_collider_1, data_1, auto.cov.y = F)
summary(fit_1_true)
######### falsely specified control variables
model_collider_1 <- "
y ~ 0.3*x + 0.3*c2
x ~ 0.3*c2
c1 ~ 0.3*x + 0.3*y
c1 ~~ 0.3*c2
"
model_control <- "
y ~ x + c2 + c1
x ~ c2 + c1
c1 ~~ c2
"
######### falsely specified control variables
model_collider_1 <- "
y ~ 0.3*x + 0.3*c2
x ~ 0.3*c2
c1 ~ 0.3*x + 0.3*y
c1 ~~ 0.3*c2
"
model_collider_1_test <- "
y ~ x + c2
x ~ c2
c1 ~ x + y
c1 ~~ c2
"
model_control <- "
y ~ x + c2 + c1
x ~ c2 + c1
c1 ~~ c2
"
data_1 <-
lavaan::simulateData(
model_collider_1,
sample.nobs = 100000,
auto.cov.y = F)
fit_1_true <- sem(model_collider_1_test, data_1, auto.cov.y = F)
summary(fit_1_true)
fit_1 <- sem(model_control, data_1, auto.cov.y = F)
summary(fit_1)
######### falsely specified control variables
model_collider_1 <- "
y ~ 0.3*x + 0.3*c2
x ~ 0.3*c2
c1 ~ 0.3*x + 0.3*y
c2 ~ 0.3*c1
"
model_collider_1_test <- "
y ~ x + c2
x ~ c2
c1 ~ x + y
c2 ~ c1
"
model_control <- "
y ~ x + c2 + c1
x ~ c2 + c1
c1 ~~ c2
"
data_1 <-
lavaan::simulateData(
model_collider_1,
sample.nobs = 100000,
auto.cov.y = F)
fit_1_true <- sem(model_collider_1_test, data_1, auto.cov.y = F)
summary(fit_1_true)
fit_1 <- sem(model_control, data_1, auto.cov.y = F)
summary(fit_1)
install.packages("lavaan")
install.packages("lavaan")
library(lavaan)
library(lavaan)
library(microbenchmark)
source("genSigma.R")
library(dplyr)
library(lavaan)
uninstall.package(OpenMx)
remove.packages(OpenMx)
remove.packages("OpenMx")
library(OpenMx)
install.packages(OpenMx)
install.packages("OpenMx")
library(dplyr)
citation(dplyr)
citation("dplyr")
setwd(r"(C:\Users\maxim\.julia\dev\SEM\benchmark\cfa\results)")
pacman::p_load(lavaan, tidyverse)
data <- lavaan::simulateData(model_true, n.obs = 100000)
model_true <- "
y ~ 0.5*x1 + 0.5*x2 + 0.5*x3
x1 ~~ 0.5*x2
x2 ~~ 0.5*x3
x3 ~~ 0.5*x1
y ~~ 0.5*y"
data <- lavaan::simulateData(model_true, n.obs = 100000)
data <- lavaan::simulateData(model_true, nobs = 100000)
data <- lavaan::simulateData(model_true, n_obs = 100000)
data <- lavaan::simulateData(model_true, 100000)
data
data <- lavaan::simulateData(model_true, sample.nobs = 100000)
model_1 <- "
y ~ x1 + x2 + x3
x1 ~~ x2
x2 ~~ x3
x3 ~~ x1
y ~~ y"
model_2 <- "
y ~ x1 + x2
x1 ~~ x2
x2 ~~ x3
x3 ~~ x1
y ~~ y"
model_2 <- "
y ~ x1 + x2 + x3
x1 ~~ x2
x2 ~~ x3
x3 ~~ x1
y ~~ y"
model_1 <- "
y ~ x1 + x2
x1 ~~ x2
y ~~ y"
data_1 <- sample_frac(data, 0.5)
data_1 <- data[1:50000, ]
fit_2 <- data[50001:100000, ]
fit_1 <- sem(model_1, data_1)
fit_2 <- sem(model_2, data_2)
data_2 <- data[50001:100000, ]
fit_2 <- sem(model_2, data_2)
fit1
fit_1
fit_1 %>% summary()
fit_2 %>% summary()
data$x3[50001:100000] <- NA
data$group <-
fit_mg <- sem(data, model_2)
data$group <-
fit_mg <- sem(data, model_2, missing = "fiml")
data$group <-
fit_mg <- sem(model_2, data, missing = "fiml")
fit_mg <- sem(model_2, data, missing = "fiml")
fit_mg
fit_mg %>% summary()
data$group <- c(rep("a", 50000), rep("b", 50000))
model_2 <- "
y ~ c(a, a)*x1 + c(b, b)*x2 + c(c, c)*x3
x1 ~~ c(d, d)*x2
x2 ~~ c(e, e)*x3
x3 ~~ c(f, f)*x1
y ~~ c(g, g)*y
x1 ~~ c(h, h)*x1
x1 ~~ c(i, i)*x1
x1 ~~ c(j, j)*x1"
fit_mg <- sem(model_2, data, missing = "fiml", group = "group")
model_2 <- "
y ~ c(a, a)*x1 + c(b, b)*x2 + c(c, c)*x3
x1 ~~ c(d, d)*x2
x2 ~~ c(e, e)*x3
x3 ~~ c(f, f)*x1
y ~~ c(g, g)*y
x1 ~~ c(h, h)*x1
x2 ~~ c(i, i)*x2
x3 ~~ c(j, j)*x3"
fit_mg <- sem(model_2, data, missing = "fiml", group = "group")
