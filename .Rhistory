facet_wrap(~p) +
theme_minimal() +
xlim(c(0, 3))
data %>% ggplot(aes(x = k, y = dens, color = factor(n))) +
geom_line() +
facet_wrap(~p) +
theme_minimal() +
xlim(c(0, 50))
data %>% ggplot(aes(x = k, y = dens, color = factor(n))) +
geom_line() +
facet_wrap(~p) +
theme_minimal() +
xlim(c(0, 3))
data %>% ggplot(aes(x = k, y = dens, color = factor(n))) +
geom_line() +
facet_wrap(~p) +
theme_minimal() +
xlim(c(0, 50)) +
ylim(c(0,1))
data %>% ggplot(aes(x = k, y = dens, color = factor(n))) +
geom_line() +
facet_wrap(~p) +
theme_minimal() +
xlim(c(0, 3)) +
ylim(c(0,1))
data %>% ggplot(aes(x = k, y = dens, color = factor(n))) +
geom_line() +
facet_wrap(~p) +
theme_minimal() +
xlim(c(0, 3)) +
ylim(c(0,1))
data %>% ggplot(aes(x = k, y = dens, color = factor(n))) +
geom_line() +
facet_wrap(~p) +
theme_minimal() +
xlim(c(0, 50)) +
ylim(c(0,1))
choose(200,40)
data %>% ggplot(aes(x = k, y = dens, color = factor(p))) +
geom_line() +
facet_wrap(~n) +
theme_minimal() +
xlim(c(0, 50)) +
ylim(c(0,1))
data %>% ggplot(aes(x = k, y = dens, color = factor(p))) +
geom_line() +
facet_wrap(~n) +
theme_minimal() +
xlim(c(0, 3)) +
ylim(c(0,1))
data %>% View()
data %>%
filter(p < 0.06) %>%
ggplot(aes(x = k, y = dens, color = factor(p))) +
geom_line() +
facet_wrap(~n) +
theme_minimal() +
xlim(c(0, 3)) +
ylim(c(0,1))
data %>% ggplot(aes(x = k, y = dens, color = factor(p))) +
geom_line() +
geom_point() +
facet_wrap(~n) +
theme_minimal() +
xlim(c(0, 3)) +
ylim(c(0,1))
data %>% ggplot(aes(x = k, y = dens, color = factor(n))) +
geom_line() +
geom_point() +
facet_wrap(~p) +
theme_minimal() +
xlim(c(0, 50)) +
ylim(c(0,1))
data %>% ggplot(aes(x = k, y = dens, color = factor(p))) +
geom_line() +
geom_point() +
facet_wrap(~n) +
theme_minimal() +
xlim(c(0, 50)) +
ylim(c(0,1))
data %>% ggplot(aes(x = k, y = dens, color = factor(p))) +
geom_line() +
facet_wrap(~n) +
theme_minimal() +
xlim(c(0, 50)) +
ylim(c(0,1))
data %>% ggplot(aes(x = k, y = dens, color = factor(p))) +
geom_line() +
geom_point() +
facet_wrap(~n) +
theme_minimal() +
xlim(c(0, 3)) +
ylim(c(0,1))
choose(10,3)
nodes <- 1:100
data <- crossing(nodes, nodes)
nodes_1 <- 1:100
nodes_2 <- 1:100
data <- crossing(nodes_1, nodes_1)
data <- crossing(nodes_1, nodes_2)
data
combs = list()
for (i in 1:100){
for (j in 1:i-1){
combs[[length(combs) + 1]] = list(node_1 = i, node_2 = j)
}
}
combs
combs %>% View()
?seq_along
seq(1, 0)
seq_along(0)
for (i in 1:100){
for (j in 1:i-1){
if (j > 0 & i > 0){
combs[[length(combs) + 1]] = list(node_1 = i, node_2 = j)
}
}
}
combs = list()
for (i in 1:100){
for (j in 1:i-1){
if (j > 0 & i > 0){
combs[[length(combs) + 1]] = list(node_1 = i, node_2 = j)
}
}
}
combs %>% View()
data <- map_dfr(combs, ~.x)
data
?rnorm
data %<>% mutate(con = rnorm(n_nodes, 0, 0.2))
n_nodes = 100
combs = list()
for (i in 1:n_nodes){
for (j in 1:i-1){
if (j > 0 & i > 0){
combs[[length(combs) + 1]] = list(node_1 = i, node_2 = j)
}
}
}
data <- map_dfr(combs, ~.x)
data %<>% mutate(con = rnorm(n_nodes, 0, 0.2))
data %<>% mutate(con = rnorm(length(data), 0, 0.2))
data %<>% mutate(con = rnorm(nrow(data), 0, 0.2))
data
data %<>% mutate(con = rnorm(nrow(data), 0, 0.3))
data
pacman::p_load(tidyverse, magrittr)
p <- c(0.01, 0.05, 0.1, 0.2)
n <- c(10, 20, 40, 100, 200)
data <- crossing(p, n)
data %<>% mutate(dist = pmap(data, ~tibble(dens = dbinom(0:..2, ..2, ..1), k = 0:..2)))
data %<>% unnest(cols = c(dist))
data %>% ggplot(aes(x = k, y = dens, color = factor(p))) +
geom_line() +
facet_wrap(~n) +
theme_minimal() +
xlim(c(0, 50)) +
ylim(c(0,1))
choose(200,20)
data %>% ggplot(aes(x = k, y = dens, color = factor(p))) +
geom_line() +
geom_point() +
facet_wrap(~n) +
theme_minimal() +
xlim(c(0, 3)) +
ylim(c(0,1))
n_nodes = 100
combs = list()
for (i in 1:n_nodes){
for (j in 1:i-1){
if (j > 0 & i > 0){
combs[[length(combs) + 1]] = list(node_1 = i, node_2 = j)
}
}
}
data <- map_dfr(combs, ~.x)
data %<>% mutate(con = rnorm(nrow(data), 0, 0.3))
data
?sample
main_path <- sample(1:nrow(data), 1)
data[main_path, ]
myf <- function(price){
price <- price*(31/17)
price <- price/56.58
return(price)
}
myf(7.91)
myf(8.01)
myf(9.82)
myf(1.27)
myf(7.20)
myf(7.88)
myf(2.49)
myf(1.15)
myf(0.79)
myf(4.78)
myf(1.19)
myf(1.19)
myf(4.75)
myf(0.29)
myf(0.73)
myf(7.01)
7.91+8.01+0.01+9.82+1.27+7.2+7.88+2.49+1.15+0.79+4.78+1.19+4.75+0.29+0.73+7.01
5714+1282+55+3634+1500+979+76
6245+5714
pacman::p_load(lavaan)
######### falsely specified control variables
model_collider <- "
y ~ 0.3*x + 0.3*c2
x ~ 0.3*c2
c1 ~ 0.3*x + 0.3*y
c1 ~~ c2
"
model_control <- "
y ~ 0.3*x + 0.3*c2 + 0.3*c1
x ~ 0.3*c2 + 0.3*c1
c1 ~~ c2
"
######### falsely specified control variables
model_collider <- "
y ~ 0.3*x + 0.3*c2
x ~ 0.3*c2
c1 ~ 0.3*x + 0.3*y
c1 ~~ c2
"
model_control <- "
y ~ 0.3*x + 0.3*c2 + 0.3*c1
x ~ 0.3*c2 + 0.3*c1
c1 ~~ c2
"
######### falsely specified control variables
model_collider_1 <- "
y ~ 0.3*x + 0.3*c2
x ~ 0.3*c2
c1 ~ 0.3*x + 0.3*y
c1 ~~ c2
"
model_control <- "
y ~ 0.3*x + 0.3*c2 + 0.3*c1
x ~ 0.3*c2 + 0.3*c1
c1 ~~ c2
"
data_1 <-
lavaan::simulateData(
model_collider,
sample.nobs = 100000,
auto.cov.y = F)
fit_1 <- sem(model_control, data, auto.cov.y = F)
fit_1 <- sem(model_control, data_1, auto.cov.y = F)
fit_1_true <- sem(model_collider_1, data_1, auto.cov.y = F)
summary(fit_1_true)
######### falsely specified control variables
model_collider_1 <- "
y ~ 0.3*x + 0.3*c2
x ~ 0.3*c2
c1 ~ 0.3*x + 0.3*y
c1 ~~ 0.3*c2
"
model_control <- "
y ~ 0.3*x + 0.3*c2 + 0.3*c1
x ~ 0.3*c2 + 0.3*c1
c1 ~~ 0.3*c2
"
data_1 <-
lavaan::simulateData(
model_collider,
sample.nobs = 100000,
auto.cov.y = F)
fit_1_true <- sem(model_collider_1, data_1, auto.cov.y = F)
summary(fit_1_true)
######### falsely specified control variables
model_collider_1 <- "
y ~ 0.3*x + 0.3*c2
x ~ 0.3*c2
c1 ~ 0.3*x + 0.3*y
c1 ~~ 0.3*c2
"
model_control <- "
y ~ 0.3*x + 0.3*c2 + 0.3*c1
x ~ 0.3*c2 + 0.3*c1
c1 ~~ 0.3*c2
"
data_1 <-
lavaan::simulateData(
model_collider_1,
sample.nobs = 100000,
auto.cov.y = F)
fit_1_true <- sem(model_collider_1, data_1, auto.cov.y = F)
summary(fit_1_true)
######### falsely specified control variables
model_collider_1 <- "
y ~ 0.3*x + 0.3*c2
x ~ 0.3*c2
c1 ~ 0.3*x + 0.3*y
c1 ~~ 0.3*c2
"
model_control <- "
y ~ x + c2 + c1
x ~ c2 + c1
c1 ~~ c2
"
######### falsely specified control variables
model_collider_1 <- "
y ~ 0.3*x + 0.3*c2
x ~ 0.3*c2
c1 ~ 0.3*x + 0.3*y
c1 ~~ 0.3*c2
"
model_collider_1_test <- "
y ~ x + c2
x ~ c2
c1 ~ x + y
c1 ~~ c2
"
model_control <- "
y ~ x + c2 + c1
x ~ c2 + c1
c1 ~~ c2
"
data_1 <-
lavaan::simulateData(
model_collider_1,
sample.nobs = 100000,
auto.cov.y = F)
fit_1_true <- sem(model_collider_1_test, data_1, auto.cov.y = F)
summary(fit_1_true)
fit_1 <- sem(model_control, data_1, auto.cov.y = F)
summary(fit_1)
######### falsely specified control variables
model_collider_1 <- "
y ~ 0.3*x + 0.3*c2
x ~ 0.3*c2
c1 ~ 0.3*x + 0.3*y
c2 ~ 0.3*c1
"
model_collider_1_test <- "
y ~ x + c2
x ~ c2
c1 ~ x + y
c2 ~ c1
"
model_control <- "
y ~ x + c2 + c1
x ~ c2 + c1
c1 ~~ c2
"
data_1 <-
lavaan::simulateData(
model_collider_1,
sample.nobs = 100000,
auto.cov.y = F)
fit_1_true <- sem(model_collider_1_test, data_1, auto.cov.y = F)
summary(fit_1_true)
fit_1 <- sem(model_control, data_1, auto.cov.y = F)
summary(fit_1)
pacman::p_load(here, arrow, tidyverse, lavaan, microbenchmark, magrittr)
set.seed(123)
setwd(r"(C:\Users\maxim\.julia\dev\sem)")
pacman::p_load(here, arrow, tidyverse, lavaan, microbenchmark, magrittr)
set.seed(123)
#----lavaan----
model <-    "visual =~ x1 + x2 + x3
textual =~ x4 + x5 + x6
speed =~ x7 + x8 + x9
x7 ~~ x8"
data <- HolzingerSwineford1939
fit_ml <- cfa(model, data, likelihood = "wishart", do.fit = FALSE)
9*10
10*11/2
11*12/2
fit_ls <- cfa(model, data, estimator = "WLS", do.fit = FALSE,  WLS.V = diag(45))
fit_ml <- cfa(model, data, likelihood = "wishart", do.fit = FALSE)
V <- lavInspect(fit_ls, "WLS.V")
fit_ml <- cfa(model, data, likelihood = "wishart", do.fit = TRUE)
fit_ls <- cfa(model, data, estimator = "WLS", do.fit = TRUE, WLS.V = diag(66))
fit_ls <- cfa(model, data, estimator = "WLS", do.fit = TRUE, WLS.V = diag(45))
par_ml <- select(parTable(fit_ml), lhs, op, rhs, est, start)
par_ls <- select(parTable(fit_ls), lhs, op, rhs, est, start)
par_ml
par_ls
pacman::p_load(here, arrow, tidyverse, lavaan, microbenchmark, magrittr)
set.seed(123)
#setwd(r"(C:\Users\maxim\.julia\dev\sem)")
#----lavaan----
model <-    "visual =~ x1 + x2 + x3
textual =~ x4 + x5 + x6
speed =~ x7 + x8 + x9
x7 ~~ x8"
data <- HolzingerSwineford1939
#fit_ml <- cfa(model, data, likelihood = "wishart", do.fit = FALSE)
#fit_ls <- cfa(model, data, estimator = "WLS", do.fit = FALSE,  WLS.V = diag(45))
#V <- lavInspect(fit_ls, "WLS.V")
#V <- V[-c(1:11), -c(1:11)]
#obs_cov <- cov(data)
#obs_cov <- solve(obs_cov)
#obs_cov <- kronecker(obs_cov, obs_cov)
#L <- lavaan::lav_matrix_duplication(11)
#W <- t(L)%*%obs_cov%*%L
#K = L%*%solve(t(L)%*%L)
fit_ml <- cfa(model, data, likelihood = "wishart", do.fit = TRUE)
fit_ls <- cfa(model, data, estimator = "WLS", do.fit = TRUE, WLS.V = diag(45))
par_ml <- select(parTable(fit_ml), lhs, op, rhs, est, start)
par_ls <- select(parTable(fit_ls), lhs, op, rhs, est, start)
write_arrow(par_ml, str_c("test/comparisons/par_hol_ml.arrow"))
write_arrow(par_ls, str_c("test/comparisons/par_hol_ls.arrow"))
write_arrow(data, str_c("test/comparisons/data_hol.arrow"))
HolzingerSwineford1939
data <- select(data, starts_with("x"))
data
fit_ml <- cfa(model, data, likelihood = "wishart", do.fit = TRUE)
fit_ls <- cfa(model, data, estimator = "WLS", do.fit = TRUE, WLS.V = diag(45))
par_ml <- select(parTable(fit_ml), lhs, op, rhs, est, start)
par_ls <- select(parTable(fit_ls), lhs, op, rhs, est, start)
write_arrow(par_ml, str_c("test/comparisons/par_hol_ml.arrow"))
write_arrow(par_ls, str_c("test/comparisons/par_hol_ls.arrow"))
write_arrow(data, str_c("test/comparisons/data_hol.arrow"))
par_ml
model <- ' i =~ 1*t1 + 1*t2 + 1*t3 + 1*t4
s =~ 0*t1 + 1*t2 + 2*t3 + 3*t4 '
fit <- growth(model, data=Demo.growth)
summary(fit)
Demo.growth
model <- '
# intercept and slope with fixed coefficients
i =~ 1*t1 + 1*t2 + 1*t3 + 1*t4
s =~ 0*t1 + 1*t2 + 2*t3 + 3*t4
# regressions
i ~ x1 + x2
s ~ x1 + x2
# time-varying covariates
t1 ~ c1
t2 ~ c2
t3 ~ c3
t4 ~ c4
'
fit <- growth(model, data = Demo.growth)
summary(fit)
model <- '
# intercept and slope with fixed coefficients
i =~ 1*t1 + 1*t2 + 1*t3 + 1*t4
s =~ 0*t1 + 1*t2 + 2*t3 + 3*t4
# regressions
i ~ x1 + x2
s ~ x1 + x2
# time-varying covariates
t1 ~ c1
t2 ~ c2
t3 ~ c3
t4 ~ c4
'
fit <- sem(model, data = Demo.growth)
summary(fit)
#----lavaan----
model <- '
# intercept and slope with fixed coefficients
i =~ 1*t1 + 1*t2 + 1*t3 + 1*t4
s =~ 0*t1 + 1*t2 + 2*t3 + 3*t4
# regressions
i ~ x1 + x2
s ~ x1 + x2
# time-varying covariates
t1 ~ c1
t2 ~ c2
t3 ~ c3
t4 ~ c4
'
#----lavaan----
model <- '
# intercept and slope with fixed coefficients
i =~ 1*t1 + 1*t2 + 1*t3 + 1*t4
s =~ 0*t1 + 1*t2 + 2*t3 + 3*t4
# regressions
i ~ x1 + x2
s ~ x1 + x2
# time-varying covariates
t1 ~ c1
t2 ~ c2
t3 ~ c3
t4 ~ c4
'
fit <- sem(model, data = Demo.growth)
summary(fit)
parTable(fit)
data <- Demo.growth
data <- Demo.growth
fit_ml <- cfa(model, data, likelihood = "wishart", do.fit = FALSE)
fit_ls <- cfa(model, data, estimator = "WLS", do.fit = FALSE,  WLS.V = diag(66))
V <- lavInspect(fit_ls, "WLS.V")
obs_cov <- cov(data)
obs_cov <- solve(obs_cov)
obs_cov <- kronecker(obs_cov, obs_cov)
fit_ml <- cfa(model, data, likelihood = "wishart", do.fit = TRUE)
fit_ls <- cfa(model, data, estimator = "WLS", do.fit = TRUE, WLS.V = diag(66))
V
fit_ls <- cfa(model, data, estimator = "WLS", do.fit = FALSE)
V <- lavInspect(fit_ls, "WLS.V")
V
size(V)
dim(V)
fit_ml <- cfa(model, data, likelihood = "wishart", do.fit = TRUE)
fit_ls <- cfa(model, data, estimator = "WLS", do.fit = TRUE, WLS.V = diag(55))
par_ml <- select(parTable(fit_ml), lhs, op, rhs, est, start)
par_ls <- select(parTable(fit_ls), lhs, op, rhs, est, start)
sata
data
write_arrow(par_ml, str_c("test/comparisons/par_growth_ml.arrow"))
write_arrow(par_ls, str_c("test/comparisons/par_growth_ls.arrow"))
write_arrow(data, str_c("test/comparisons/data_growth.arrow"))
ncol(data)
names(data)
